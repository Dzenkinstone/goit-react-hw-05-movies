{"version":3,"file":"static/js/269.b4ec4d29.chunk.js","mappings":"8SAEMA,EAAM,mCAECC,EAAS,mCAAG,oGACAC,EAAAA,EAAAA,IAAA,gEACoCF,IAFpC,cACjBG,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,qDAOTC,EAAa,mCAAG,WAAMC,GAAN,uFACJJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,oBACqCN,EADrC,oBADI,cACrBG,EADqB,yBAIpBA,EAASC,MAJW,2CAAH,sDAObG,EAAe,mCAAG,WAAMD,GAAN,uFACNJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,4BAC6CN,EAD7C,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfI,EAAe,mCAAG,WAAMF,GAAN,uFACNJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,4BAC6CN,EAD7C,2BADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfK,EAAe,mCAAG,WAAMC,GAAN,uFACNR,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,kBAC6CU,EAD7C,+CADM,cACvBP,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qD,2JC9BfO,EAAOC,EAAAA,EAAAA,GAAH,4JASJC,EAAOD,EAAAA,EAAAA,GAAH,wO,SCgCjB,EAtCgB,WACd,IAAQE,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEMZ,EAAAA,EAAAA,IAAgBM,GAFtB,OAEXX,EAFW,OAGjBe,EAAWf,EAASkB,SACpBC,QAAQC,IAAIpB,GAJK,gDAMjBmB,QAAQC,IAAR,MANiB,yDAAH,qDAUlBH,GACD,GAAE,CAACN,IAEJQ,QAAQC,IAAIN,IAGV,8BACsB,IAAnBA,EAAQO,QACP,wEAEA,SAACb,EAAD,UACGM,EAAQQ,KAAI,gBAAGX,EAAH,EAAGA,GAAIY,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACd,EAAD,YACE,4BAASa,KACT,uBAAIC,MAFKb,EADA,OAUtB,ECxCD,G","sources":["api.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","components/Reviews/index.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'd7e465e9850be233d7a3c42efee828b5';\n\nexport const getMovies = async () => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n  );\n  return responce.data;\n};\n\nexport const getMoviesById = async movie_id => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${KEY}&language=en-US`\n  );\n  return responce.data;\n};\n\nexport const getMovieCredits = async movie_id => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return responce.data;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return responce.data;\n};\n\nexport const getMovieByQuery = async query => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return responce.data;\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin: 30px 0px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 30px;\n`;\n\nexport const Item = styled.li`\n  width: calc(100vw - 200px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  gap: 10px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n`;\n","import { getMovieReviews } from 'api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Item, List } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const responce = await getMovieReviews(id);\n        setReviews(responce.results);\n        console.log(responce);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchReviews();\n  }, [id]);\n\n  console.log(reviews);\n\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <span>We don't have any reviews for this movie</span>\n      ) : (\n        <List>\n          {reviews.map(({ id, author, content }) => (\n            <Item key={id}>\n              <strong>{author}</strong>\n              <p>{content}</p>\n            </Item>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import Reviews from './Reviews';\nexport default Reviews;\n"],"names":["KEY","getMovies","axios","responce","data","getMoviesById","movie_id","getMovieCredits","getMovieReviews","getMovieByQuery","query","List","styled","Item","id","useParams","useState","reviews","setReviews","useEffect","fetchReviews","results","console","log","length","map","author","content"],"sourceRoot":""}