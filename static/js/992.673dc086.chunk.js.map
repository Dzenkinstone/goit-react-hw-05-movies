{"version":3,"file":"static/js/992.673dc086.chunk.js","mappings":"8SAEMA,EAAM,mCAECC,EAAS,mCAAG,oGACAC,EAAAA,EAAAA,IAAA,gEACoCF,IAFpC,cACjBG,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,qDAOTC,EAAa,mCAAG,WAAMC,GAAN,uFACJJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,oBACqCN,EADrC,oBADI,cACrBG,EADqB,yBAIpBA,EAASC,MAJW,2CAAH,sDAObG,EAAe,mCAAG,WAAMD,GAAN,uFACNJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,4BAC6CN,EAD7C,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfI,EAAe,mCAAG,WAAMF,GAAN,uFACNJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,4BAC6CN,EAD7C,2BADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfK,EAAe,mCAAG,WAAMC,GAAN,uFACNR,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,kBAC6CU,EAD7C,+CADM,cACvBP,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qD,uFC9BfO,EAAOC,EAAAA,EAAAA,GAAH,4JASJC,EAAOD,EAAAA,EAAAA,GAAH,wO,SCPJE,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAE3B,OADAC,QAAQC,IAAIF,IAEV,SAACJ,EAAD,UACGI,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACV,SAACR,EAAD,WACE,SAAC,KAAD,CAASS,GAAE,kBAAaH,GAAxB,UACE,8BAAIC,QAAJ,IAAIA,EAAAA,EAASC,OAFNF,EADD,KASjB,C,uIChBYI,E,OAAOX,EAAAA,KAAH,8F,SCEJY,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEA,OACE,UAACL,EAAD,CAAME,SAAU,SAAAI,GAAK,OAAIJ,EAASI,EAAOF,EAAOC,EAA3B,EAArB,WACE,kBACEE,KAAK,OACLH,MAAOA,EACPI,SAAU,SAAAF,GAAK,OAAID,EAASC,EAAMG,OAAOL,MAA1B,KAEjB,mBAAQG,KAAK,SAAb,sBAGL,E,gBCiCD,EA3Ce,WACb,OAAwCG,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BT,EAAAA,EAAAA,UAAS,IAAnC,eAAOhB,EAAP,KAAc0B,EAAd,KACA,GAA4BV,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAesB,EAAf,KACMhB,EAAOa,EAAaI,IAAI,SAE9BtB,QAAQC,IAAIiB,GA6BZ,OAnBAK,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,uFACH,KAAV9B,EADa,2EAMQD,EAAAA,EAAAA,IAAgBY,GANxB,OAMTlB,EANS,OAOfa,QAAQC,IAAId,GACZkC,EAAUlC,EAASsC,SACnBzB,QAAQC,IAAId,GATG,kDAWfa,QAAQC,IAAR,MAXe,0DAAH,qDAehBuB,GACD,GAAE,CAAC9B,EAAOW,KAGT,6BACE,SAACG,EAAD,CAAaC,SA7BI,SAACI,EAAOF,EAAOC,GAClCC,EAAMa,iBACNN,EAAST,GAETQ,EAD6B,KAAVR,EAAe,CAAEA,MAAAA,GAAU,CAAC,GAE/CC,EAAS,GACV,IAwBIb,IAAU,SAACD,EAAA,EAAD,CAAYC,OAAQA,MAGpC,C","sources":["api.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/FoundMovies/FoundMovies.styled.js","components/FoundMovies/FoundMovies.js","pages/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'd7e465e9850be233d7a3c42efee828b5';\n\nexport const getMovies = async () => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n  );\n  return responce.data;\n};\n\nexport const getMoviesById = async movie_id => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${KEY}&language=en-US`\n  );\n  return responce.data;\n};\n\nexport const getMovieCredits = async movie_id => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return responce.data;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return responce.data;\n};\n\nexport const getMovieByQuery = async query => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return responce.data;\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin: 30px 0px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 30px;\n`;\n\nexport const Item = styled.li`\n  width: calc(100vw - 200px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  gap: 10px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n`;\n","import { NavLink } from 'react-router-dom';\nimport { List } from './MoviesList.styled';\nimport { Item } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  console.log(movies);\n  return (\n    <List>\n      {movies.map(({ id, title, name }) => (\n        <Item key={id}>\n          <NavLink to={`/movies/${id}`}>\n            <p>{title ?? name}</p>\n          </NavLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import { useState } from 'react';\nimport { Form } from './FoundMovies.styled';\n\nexport const FoundMovies = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  return (\n    <Form onSubmit={event => onSubmit(event, value, setValue)}>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={event => setValue(event.target.value)}\n      ></input>\n      <button type=\"submit\">Search</button>\n    </Form>\n  );\n};\n","import { getMovieByQuery } from 'api';\nimport { FoundMovies } from 'components/FoundMovies';\nimport { MoviesList } from 'components/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const name = searchParams.get('value');\n\n  console.log(searchParams);\n\n  const handleSubmit = (event, value, setValue) => {\n    event.preventDefault();\n    setQuery(value);\n    const nextParams = value !== '' ? { value } : {};\n    setSearchParams(nextParams);\n    setValue('');\n  };\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      if (query === '') {\n        return;\n      }\n\n      try {\n        const responce = await getMovieByQuery(name);\n        console.log(responce);\n        setMovies(responce.results);\n        console.log(responce);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovie();\n  }, [query, name]);\n\n  return (\n    <main>\n      <FoundMovies onSubmit={handleSubmit} />\n      {movies && <MoviesList movies={movies} />}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","getMovies","axios","responce","data","getMoviesById","movie_id","getMovieCredits","getMovieReviews","getMovieByQuery","query","List","styled","Item","MoviesList","movies","console","log","map","id","title","name","to","Form","FoundMovies","onSubmit","useState","value","setValue","event","type","onChange","target","useSearchParams","searchParams","setSearchParams","setQuery","setMovies","get","useEffect","fetchMovie","results","preventDefault"],"sourceRoot":""}